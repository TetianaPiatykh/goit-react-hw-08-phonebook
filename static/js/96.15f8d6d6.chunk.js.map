{"version":3,"file":"static/js/96.15f8d6d6.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/Contact.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/App.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactLi = styled.li`\n  display: flex;\n//   flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n   border: 1px solid ;\n    border-color: #cdedff;\n    margin-bottom: 5px;\n  \n`;\n\nexport const ContactListUl = styled.ul`\nwidth: 100%;\n`;\n\nexport const ContactName = styled.p`\npadding-left: 5px;\nfont-size: 18px;\nfont-weight: 700;\ncolor: #295a7a;\n`;\n\nexport const DeletBtn = styled.button`\nbackground-color: #85a4b9;\n    border: none;\n    color: white;\n    padding: 10px 20px;\n    text-decoration: none;\n    margin: 4px 2px;\n    cursor: pointer;\n    font-size: 12px;\n         &:hover {\n    border: 3px solid ;\n    border-color: #93a0a9;\n    font-size: 16px;\n    padding: 6px 12px;\n     box-shadow: 1px 1px 2px 3px #85a4b9;\n     }\n`;","\nimport {  ContactName, DeletBtn } from \"components/ContactList/ContactList.styled\";\nimport { FaRegUser } from 'react-icons/fa';\nimport { useDispatch } from \"react-redux\";\nimport {deleteContact} from \"../../redux/contacts/operations\"\nimport PropTypes from 'prop-types';\n\n\n  // const deletContact = contactId => {\n  //   setContacts(prevState => prevState.filter(contact => contact.id !== contactId),\n  //   );\n  // };\n\nexport const ContactItem = ({ id, name, number}) => {\n\n    const dispatch = useDispatch();\n\n    return <>\n        <ContactName><FaRegUser/> {name} : {number}</ContactName>\n        <DeletBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</DeletBtn>\n    </>\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    // deletContactMethod: PropTypes.func.isRequired,\n};","export const getContacts = state => state.contacts.contacts.items;\n\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const getError = state => state.contacts.contacts.error;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getIsContactExist = state => Boolean(state.contacts.items.length);\n","// import { Component } from \"react\";\nimport { ContactItem } from \"./Contact\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts, getFilter } from \"../../redux/contacts/selectors\";\n// import PropTypes from 'prop-types';\nimport { ContactListUl, ContactLi } from \"./ContactList.styled\";\n\n\nexport const ContactList = () => {\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  console.log(contacts);\n  console.log(filter);\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    console.log(filter.toLowerCase());\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  // console.log(visibleContacts());\n\n return (<ContactListUl>\n   {visibleContacts().map(({ id, name, number }) => {\n     return (\n       <ContactLi key={id}>\n         <ContactItem id={id} name={name} number={number} />\n        </ContactLi>)\n   }\n        )}\n    </ContactListUl>)\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//     id: PropTypes.string.isRequired,\n//     })\n//   ),\n//   deletContact: PropTypes.func.isRequired,\n// }\n\n\n","import styled from \"styled-components\";\n\nexport const FormSubmit = styled.form`\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n    border-radius: 1px;\n    border: 3px solid;\n    border-color: #a4d7f9;\n    width: 100%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-bottom: 20px;\n  // width: 100%;\n  width: 300px;\n  \n`;\n\nexport const Span = styled.span`\nmargin-bottom: 5px;\nfont-size: 25px;\ncolor: #295a7a;\nwidth: 100%;\n`;\n\nexport const FormBtn = styled.button`\n    background-color: #85a4b9;\n    border: none;\n    color: white;\n    padding: 12px 24px;\n    text-decoration: none;\n    margin: 10px 4px 15px 4px;\n    cursor: pointer;\n    font-size: 18px;\n         &:hover {\n    border: 3px solid ;\n    margin-top: 7px;\n    margin-bottom: 9px;\n    border-color: #93a0a9;\n    font-size: 24px;\n    padding: 10px 20px;\n     box-shadow: 1px 1px 2px 3px #85a4b9;\n     }\n`;\n\nexport const InputContactForm = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px auto;\n    outline: none;\n    // box-sizing: border-box;\n    border-radius: 4px;\n    border: 3px solid;\n    border-color: #a4d7f9;\n\n     &:focus {\n    border: 3px solid ;\n    border-color: #d6efff;\n     background-color: #f8fcff;\n     box-shadow: 1px 1px 2px 3px #d6efff;\n     }\n`;","\nimport { FormSubmit, Label, Span, InputContactForm, FormBtn } from \"./ContactForm.styled\";\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {addContact} from \"../../redux/contacts/operations\"\nimport { getContacts } from \"../../redux/contacts/selectors\";\n\n\nexport const Form = () => {\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [contactName, setContactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputValue = (e) => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setContactName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n  \n      if (\n      contacts.some(contact => contact.name.toLowerCase() === contactName.toLowerCase())\n    ) {\n      return alert(contactName + ' is already in contacts!');\n    };\n    \n\n    \n    console.log(contacts);\n\n\n    const contact = {\n      contactName,\n      number\n    };\n\n     console.log(contact);\n\n    dispatch(addContact(contact));\n    \n    reset();\n    }\n    \n    const reset = () => {\n      setContactName('');\n      setNumber('');\n    }\n\n        return (\n        <FormSubmit onSubmit={handleSubmit}>\n         <Label>\n          <Span>Name</Span> \n           <InputContactForm\n            \n            type=\"text\"\n            name=\"name\"\n            value={contactName}\n            onChange={handleInputValue}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n           />\n           </Label>\n\n          <Label>\n          <Span>Number</Span> \n          <InputContactForm\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleInputValue}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be at least 7 digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          /> \n           </Label>\n           \n           <FormBtn type=\"submit\">add contact</FormBtn>\n        </FormSubmit>  \n\n        )\n\n}\n\nexport default Form;\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };","import styled from \"styled-components\";\n\nexport const AppForm = styled.div`\nwidth: 800px;\nmargin: 0 auto;\n`;\n\nexport const FirstTitle = styled.h1`\n color: #082c43;\n`;\n\nexport const SecondTitle = styled.h2`\n color: #082c43;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\nimport { ContactList } from 'components/ContactList/ContactList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport Form from 'components/ContactForm/ContactForm';\n// import { fetchTasks } from 'redux/tasks/operations';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\nimport { FirstTitle, SecondTitle } from \"../components/App.styled\";\nimport { getIsLoading, getError, getContacts } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n      const error = useSelector(getError);\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 28,\n        width: '100%',\n          color: '#010101'}}>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <FirstTitle>Phonebook</FirstTitle> \n      <Form />\n      <SecondTitle>Contacts</SecondTitle> \n      {isLoading && !error && <b>Request in progress...</b>}\n      {/* <div>{isLoading && 'Request in progress...'}</div> */}\n      {contacts && !isLoading && <ContactList />}\n          {/* <ContactList /> */}\n    </div>\n  );\n}"],"names":["ContactLi","styled","ContactListUl","ContactName","DeletBtn","ContactItem","id","name","number","dispatch","useDispatch","type","onClick","deleteContact","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","ContactList","useSelector","console","log","normalizedFilter","toLowerCase","contact","toLocaleLowerCase","includes","visibleContacts","map","FormSubmit","Label","Span","FormBtn","InputContactForm","useState","contactName","setContactName","setNumber","handleInputValue","e","currentTarget","value","reset","onSubmit","preventDefault","some","alert","addContact","onChange","pattern","title","required","FirstTitle","SecondTitle","Tasks","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","width","color","Helmet"],"sourceRoot":""}